class TicTacToe:
    def __init__(self):
        self.board = [' '] * 9
        self.current_player = 'X'
        self.game_over = False

    def display_board(self):
        print(f" {self.board[0]} | {self.board[1]} | {self.board[2]} ")
        print("---+---+---")
        print(f" {self.board[3]} | {self.board[4]} | {self.board[5]} ")
        print("---+---+---")
        print(f" {self.board[6]} | {self.board[7]} | {self.board[8]} ")

    def make_move(self, position):
        if self.board[position] == ' ':
            self.board[position] = self.current_player
            self.check_winner()
            self.switch_player()
        else:
            print("Invalid move. Please choose an empty position.")

    def switch_player(self):
        if self.current_player == 'X':
            self.current_player = 'O'
        else:
            self.current_player = 'X'

    def check_winner(self):
        winning_positions = [
            (0, 1, 2), (3, 4, 5), (6, 7, 8),  # Rows
            (0, 3, 6), (1, 4, 7), (2, 5, 8),  # Columns
            (0, 4, 8), (2, 4, 6)  # Diagonals
        ]

        for pos in winning_positions:
            if self.board[pos[0]] == self.board[pos[1]] == self.board[pos[2]] != ' ':
                self.display_board()
                print(f"Player {self.current_player} wins!")
                self.game_over = True
                return

        if ' ' not in self.board:
            self.display_board()
            print("It's a tie!")
            self.game_over = True

    def play(self):
        print("Welcome to Tic-Tac-Toe!")
        print("To make a move, enter a number from 0 to 8 representing the position on the board.")

        while not self.game_over:
            self.display_board()
            position = int(input(f"Player {self.current_player}, make your move: "))
            self.make_move(position)

        print("Game over.")


# Create a new instance of the TicTacToe game and start playing
game = TicTacToe()
game.play()
